generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Board {
  id            String @id @default(uuid())

  orgId         String
  title         String
  imageId       String
  imageThumbUrl String  @db.String()
  imageFullUrl  String @db.String()
  imageLinkHTML String @db.String()
  imageUserName String @db.String()

  createAt      DateTime @default(now())
  updatedAt     DateTime @updatedAt

  lists         List[]
}

model List {
  id            String @id @default(uuid())


  title         String
  order         Int

  boardId       String
  board         Board @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@index([boardId])

  cards         Card[]
  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Card {
  id            String @id @default(uuid())


  title         String
  order         Int
  description   String? @db.String()
  
  listId        String
  list          List @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

enum ACTION {
    CREATE
    UPDATE
    DELETE
    COPY
}

enum ENTITY_TYPE {
    BOARD
    LIST
    CARD
}

model AuditLog {
  id            String @id @default(uuid())

  orgId         String
  action        ACTION
  entityId      String
  entityType    ENTITY_TYPE
  entityTitle   String
  userId        String  
  userImage     String @db.String()
  userName      String @db.String()

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model OrgLimit {
  id            String @id @default(uuid())

  orgId         String @unique
  count         Int @default(0)


  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}


model OrgSubscription {
  id                     String @id @default(uuid())

  orgId                  String @unique
  stripeCustomerId       String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String? @unique @map(name: "stripe_subscription_id")
  stripePriceId           String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stipre_current_period_end")
}